% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database_functions.R
\name{postgres_log_data_selection}
\alias{postgres_log_data_selection}
\title{postgres_log_data_selection}
\usage{
postgres_log_data_selection(
  con,
  original_input,
  success = TRUE,
  error_message = NA_character_
)
}
\arguments{
\item{con}{Database connection object, created using DBI. This object should represent a valid connection to a PostgreSQL database.}

\item{original_input}{Full schema.table name as a string. This is the table name and schema where the data was selected from.}

\item{success}{Logical value indicating whether the data access was successful. Default is \code{TRUE}.}

\item{error_message}{Optional error message, which will be logged if \code{success} is \code{FALSE}. If the operation was successful, this can be omitted (default is \code{NA_character_}).}
}
\description{
Logs access to a PostgreSQL table in \code{raw.metadata_data_selection_log} for audit and tracking purposes.
}
\details{
\itemize{
\item This function logs the access of a table in the \code{raw.metadata_data_selection_log} table. It captures the time of access, the user who executed the query, the working directory, the success status, and any error messages if applicable.
\item The \code{raw.metadata_data_selection_log} table is automatically created if it does not already exist.
\item This function is useful for tracking data access and operations performed on tables for auditing and troubleshooting purposes.
\item The \code{error_message} is only recorded when \code{success} is \code{FALSE}, and is left empty (NA) if the operation was successful.
}
}
\examples{
\dontrun{
# Example usage:
connection <- DBI::dbConnect(RPostgres::Postgres(), dbname = "my_database")
# Log successful data selection from the "public.users" table
postgres_log_data_selection(connection, "public.users", success = TRUE)
# Log a failed data selection with an error message
postgres_log_data_selection(connection, "public.users", success = FALSE, error_message = "Query failed due to timeout.")
}

}

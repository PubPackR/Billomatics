% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_tools.R
\name{replace_external_ids_with_internal}
\alias{replace_external_ids_with_internal}
\title{Replace External IDs with Internal IDs}
\usage{
replace_external_ids_with_internal(
  external_table,
  external_id_column,
  id_mapping_table,
  external_id_column_mapping,
  new_column_name = external_id_column
)
}
\arguments{
\item{external_table}{A data frame that contains the external IDs you want to replace.}

\item{external_id_column}{A string. The name of the column in \code{external_table}
that holds the external IDs. This column will be used as the join key.}

\item{id_mapping_table}{A data frame that serves as the mapping between
internal and external IDs. It must contain a column named \code{id} (for internal IDs)
and a column specified by \code{external_id_column_mapping}.}

\item{external_id_column_mapping}{A string. The name of the column in \code{id_mapping_table}
that holds the external IDs. This column will be used as the join key from the mapping table.}

\item{new_column_name}{A string. The desired name for the column containing
the internal IDs in the output table. Defaults to \code{external_id_column},
which means the original external ID column will be overwritten.}
}
\value{
A data frame similar to \code{external_table}, but with the specified
external ID column replaced by or augmented with the corresponding internal IDs.
If an external ID does not have a match in the mapping table, the internal ID
will be \code{NA}.
}
\description{
This function takes a table containing external IDs and replaces them (or
adds a new column with) corresponding internal IDs by joining with a
separate ID mapping table.
}
\examples{
\dontrun{
  external_data_with_external_ids <- data.frame(
    item_id = c("ext_A", "ext_B", "ext_Z", "ext_D"),
    quantity = c(10, 20, 15, 30)
  )

  id_map <- data.frame(
    id = c(1, 2, 3, 5),
    external_user_id = c("ext_A", "ext_B", "ext_C", "ext_E")
  )

  # Overwrite the 'item_id' column with internal IDs
  result_overwrite_internal <- replace_external_ids_with_internal(
    external_table = external_data_with_external_ids,
    external_id_column = "item_id",
    id_mapping_table = id_map,
    external_id_column_mapping = "external_user_id"
  )
  print(result_overwrite_internal)

  # Create a new column named 'internal_item_id'
  result_new_column_internal <- replace_external_ids_with_internal(
    external_table = external_data_with_external_ids,
    external_id_column = "item_id",
    id_mapping_table = id_map,
    external_id_column_mapping = "external_user_id",
    new_column_name = "internal_item_id"
  )
  print(result_new_column_internal)
}
}

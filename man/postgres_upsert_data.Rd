% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database_functions.R
\name{postgres_upsert_data}
\alias{postgres_upsert_data}
\title{postgres_upsert_data}
\usage{
postgres_upsert_data(
  con,
  schema,
  table,
  data,
  match_cols = NULL,
  delete_missing = FALSE,
  returning_cols = NULL
)
}
\arguments{
\item{con}{Eine aktive DB-Verbindung (z.B. mit \code{DBI::dbConnect()} erstellt).}

\item{schema}{Schema in der Datenbank (z.B. "raw").}

\item{table}{Tabellenname (z.B. "my_table" oder "raw.my_table").}

\item{data}{Ein \code{data.frame}, das eingefügt oder aktualisiert werden soll.}

\item{match_cols}{Zeichenvektor mit Spaltennamen, die als Konfliktschlüssel dienen.}

\item{delete_missing}{Logical. Wenn \code{TRUE}, werden alle nicht mehr im DataFrame enthaltenen Einträge gelöscht (basierend auf Konfliktspalten).}

\item{returning_cols}{Optionaler Zeichenvektor mit Spalten, die nach dem Upsert zurückgegeben werden sollen.}
}
\value{
Ein \code{data.frame} mit den zurückgegebenen Spalten (falls \code{returning_cols} gesetzt wurde), sonst \code{invisible(NULL)}.
}
\description{
Diese Funktion führt ein UPSERT (Insert or Update) in eine PostgreSQL-Datenbank durch.
Optional können nicht mehr vorhandene Zeilen gelöscht werden, und automatisch generierte
IDs (z.B. serial) werden bei Bedarf zurückgegeben.
}
